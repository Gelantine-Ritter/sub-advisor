openapi: 3.0.0
info:
  title: "Sub Advisor Backend API"
  description: "This is the future Sub-Advisor-API for storing Venues, Members and Events"
  version: 3.0.0

paths:
  /authentication/login:
    post:
      tags:
        - "Authentication"
      description: "login via userId and password"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginObject"
      responses:
        200:
          description: Ok
        400:
          description: Bad Request
  /authentication/venues/registration:
    post:
      tags:
        - "Authentication"
      description: "register as a new Venue"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Venue"
      responses:
        200:
          description: Ok
        400:
          description: Bad Request
  /authentication/members/registration:
    post:
      tags:
        - "Authentication"
      description: "register as a new Member"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Member"
      responses:
        200:
          description: Ok
        400:
          description: Bad Request
  /events:
    post:
      tags:
        - "Events"
      description: "create an event"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
      responses:
        201:
          description: Created
        400:
          description: Not Created
  /events/{eventId}:
    parameters:
      - name: eventId
        in: path
        description: "eventId represents the key of an event in the database"
        required: true
        schema:
          type: integer
    get:
      tags:
        - "Events"
      description: "Get an Event by Id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        400:
          description: Bad Request
        404:
          description: Not Found
    put:
      tags:
        - "Events"
      description: "update an Event by id"
      operationId: "updateEvent"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
      responses:
        204:
          description: Updated
        400:
          description: Bad Request
        404:
          description: Not Found
    delete:
      tags:
        - "Events"
      description: "delete an Event by id"
      operationId: "deleteEvent"
      responses:
        202:
          description: Accepted
        400:
          description: "Invalid id supplied"
        404:
          description: "Event not found"
  /venues:
    post:
      tags:
        - "Venues"
      description: "create an Venue"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Venue"
      responses:
        201:
          description: Created
        400:
          description: Not Created
  /venues/{venueId}:
    parameters:
      - name: venueId
        in: path
        description: "venueId represents the key of a venue in the database"
        required: true
        schema:
          type: integer
    get:
      tags:
        - "Venues"
      description: "Get an Venue by Id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Venue"
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Venue"
        400:
          description: Bad Request
        404:
          description: Not Found
    put:
      tags:
        - "Venues"
      description: "update a Venue by id"
      operationId: "updateVenue"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Venue"
      responses:
        204:
          description: Updated
        400:
          description: Bad Request
        404:
          description: Not Found
    delete:
      tags:
        - "Venues"
      description: "delete a Venue by id"
      operationId: "deleteVenue"
      responses:
        202:
          description: Accepted
        400:
          description: "Invalid id supplied"
        404:
          description: "Venue not found"
  /members:
    post:
      tags:
        - "Members"
      description: "create an Venue"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Venue"
      responses:
        201:
          description: Created
        400:
          description: Not Created
  /members/{memberId}:
    parameters:
      - name: memberId
        in: path
        description: "memberId represents the key of a venue in the database"
        required: true
        schema:
          type: integer
    get:
      tags:
        - "Members"
      description: "Get an Member by Id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Member"
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Member"
        400:
          description: Bad Request
        404:
          description: Not Found
    put:
      tags:
        - "Members"
      description: "update a Member by id"
      operationId: "updateVenue"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Member"
      responses:
        204:
          description: Updated
        400:
          description: Bad Request
        404:
          description: Not Found
    delete:
      tags:
        - "Members"
      description: "delete a Member by id"
      operationId: "deleteVenue"
      responses:
        202:
          description: Accepted
        400:
          description: "Invalid id supplied"
        404:
          description: "Member not found"
components:
  schemas:
    Event:
      type: object
      required:
        - title
        - venueId
      properties:
        title:
          type: string
          example: "Mit der Kamera übers Feld"
        venueId:
          type: string
          example: "Fotobande Neukölln"
        date:
          type: string
          example: "2021-09-08"
        time:
          type: string
          example: "20:34"
        category:
          type: array
          items:
            type: string
          example: [ "Art", "Partizipation", "Outdoor" ]
    Venue:
      type: object
      required:
        - email
        - name
      properties:
        email:
          type: string
          example: "foto-bande-nk@gmail.com"
        name:
          type: string
          example: "Fotobande Neukölln"
        info:
          type: string
          example: "Fotobande Neukölln ist eine Gruppe vom Personen..."
    Member:
      type: object
      required:
        - personInfo
      properties:
        personInfo:
          type: string
          example: "Nayla Hammerschlag,..."
    LoginObject:
      type: object
      required:
        - userId
        - password
        - isVenue
      properties:
        userId:
          type: string
          example: "nayla-hammerschlag@gmail.com"
        password:
          type: string
          example: "super secret password"
        isVenue:
          type: boolean
          example: false




